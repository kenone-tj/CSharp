配列変数の問題点
　・あらかじめ格納できるデータの数が決まっている
　・データ数がわからない大量のデータを扱うのに不向き

コレクションとは
　・大量のデータを扱うことができるクラスライブラリ
　・あらかじめ格納できるデータサイズがわからなくてもよい
　・様々なタイプがあり目的に応じて選択できる
　・英語で、Collection(コレクション)と書く

コレクションを使うには
　・Collectionは、様々なデータ群を扱うクラス群
　・ネームスペース「System.Collections.Generic」に含まれる

Listクラス
　・動的な配列
　・長さを自由に変えることができる
　・データの挿入・削除が可能

Listクラスのデータの追加
　・データの追加はAdd()メソッドで行う
　・データは、追加した順番に0,1,2・・・と番号が割り振られる
　・List<int> a = new List<int>();

Listデータの削除
　・データの削除はRemove()/RemoveAt()メソッドで行う
　・その際、引数として与えた番号のデータがなくなるが、それk外の番号は、繰り上がっていく
　・Clear 中身をクリアする

様々な種類のコレクション
　・Dictionary
　・HashSet
　・そのほかにも様々なコレクションがある

Dictionary１
　・Collection(コレクション)はListばかりではない
　・Dictionaryは、キーと値を1セットとした要素の集まりを管理するクラス
　・通常の配列変数では、キーとして必ず値をとるが、Dictionaryは、キーと値の組み合わせを自由に設定することが可能
　・Dictionary<String, String> d = new Dictionary<String, String>();

Dictionary２
　・Dctionaryの書式
　　　Dictionary<(キーのクラス),(値のクラス)>
　・Dictionaryにデータを格納
　　　(変数名)[キー]=値;
　・Dictionaryからデータの取り出し
　　　(変数名)[キー]

HashSet
　・重複なくデータを格納できるコレクション
　・Addメソッドを用いて、データを格納する
　・追加される要素に同じものが含まれていても1つとみなす
　・HashSet<int> a = new HashSet<int>();
